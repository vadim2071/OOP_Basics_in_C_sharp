//1. Реализовать класс для описания здания (уникальный номер здания, высота, этажность, количество квартир, подъездов).
//Поля сделать закрытыми, предусмотреть методы для заполнения полей и получения значений полей для печати.
//Добавить методы вычисления высоты этажа, количества квартир в подъезде, количества квартир на этаже и т.д.
//Предусмотреть возможность, чтобы уникальный номер здания генерировался программно.
//Для этого в классе предусмотреть статическое поле, которое бы хранило последний использованный номер здания,
//и предусмотреть метод, который увеличивал бы значение этого поля.

//2. * Для реализованного класса создать новый класс Creator, который будет являться фабрикой объектов класса здания.
//Для этого изменить модификатор доступа к конструкторам класса,
//в новый созданный класс добавить перегруженные фабричные методы CreateBuild для создания объектов класса здания.
//В классе Creator все методы сделать статическими, конструктор класса сделать закрытым.
//Для хранения объектов класса здания в классе Creator использовать хеш-таблицу.
//Предусмотреть возможность удаления объекта здания по его уникальному номеру из хеш-таблицы.
//Создать тестовый пример, работающий с созданными классами.

using System;
using Library;


namespace Lesson_04
{
    class Program
    {
        static void Main(string[] args)
        {
            Building a = new Building(27, 9, 990, 3);
            Building b = new Building(40, 10, 1120, 4);
            Console.WriteLine(  "Новый дом: \n " +
                                "номер дома  - {0}\n " +
                                "высота дома - {1}\n " +
                                "количество квартир в доме   - {2}\n " +
                                "количество подъездов в доме -{3}",
                                a.NumBuilding, a.Height, a.NumAppartment, a.NumEntrances);
            Console.WriteLine("Дом № {0}: \n " +
                                "высота этажа - {1}\n " +
                                "количество квартир в подъезде - {2}\n " +
                                "количество квартир на этаже -{3}",
                                a.NumBuilding, a.GetHeightFloor(), a.GetNumAppartmPerEntr(), a.GetNumAppartmPerFloor());
            Console.WriteLine("------------------------------------------");

            Console.WriteLine("Новый дом: \n " +
                                "номер дома  - {0}\n " +
                                "высота дома - {1}\n " +
                                "количество квартир в доме   - {2}\n " +
                                "количество подъездов в доме -{3}",
                                b.NumBuilding, b.Height, b.NumAppartment, b.NumEntrances);
            Console.WriteLine("Дом № {0}: \n " +
                                "высота этажа - {1}\n " +
                                "количество квартир в подъезде - {2}\n " +
                                "количество квартир на этаже -{3}",
                                b.NumBuilding, b.GetHeightFloor(), b.GetNumAppartmPerEntr(), b.GetNumAppartmPerFloor());

        }
    }
}
