//1. Реализовать класс для описания здания (уникальный номер здания, высота, этажность, количество квартир, подъездов).
//Поля сделать закрытыми, предусмотреть методы для заполнения полей и получения значений полей для печати.
//Добавить методы вычисления высоты этажа, количества квартир в подъезде, количества квартир на этаже и т.д.
//Предусмотреть возможность, чтобы уникальный номер здания генерировался программно.
//Для этого в классе предусмотреть статическое поле, которое бы хранило последний использованный номер здания,
//и предусмотреть метод, который увеличивал бы значение этого поля.

//2. * Для реализованного класса создать новый класс Creator, который будет являться фабрикой объектов класса здания.
//Для этого изменить модификатор доступа к конструкторам класса,
//в новый созданный класс добавить перегруженные фабричные методы CreateBuild для создания объектов класса здания.
//В классе Creator все методы сделать статическими, конструктор класса сделать закрытым.
//Для хранения объектов класса здания в классе Creator использовать хеш-таблицу.
//Предусмотреть возможность удаления объекта здания по его уникальному номеру из хеш-таблицы.
//Создать тестовый пример, работающий с созданными классами.

using System;



namespace Library
{
    abstract class Building
    {
        private int _numBuilding;    // номер здания
        private int _height;         // высота
        private int _numFloors;    // этажность
        private int _numAppartment; // количество квартир
        private int _numEntrances; // количество подъездов
    }

    interface IBuilding
    {
        public int GetHeightFloor();     // метод - возвращает высоту этажа
        public int GetNumAppartmPerEntr();   // метод - возвращает количество квартир в 1 подъезде
        public int GetNumAppartmPerFloor();   // метод - возвращает количество квартир на одном этаже

    }



    abstract class Creator
    {
       
    }
        

    
}
